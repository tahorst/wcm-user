Timer unit: 1e-06 s

Total time: 0.016228 s
File: /home/travis/wcEcoli/models/ecoli/processes/two_component_system.py
Function: calculateRequest at line 48

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    48                                           	@line_profile
    49                                           	def calculateRequest(self):
    50                                           		# Get molecule counts
    51         1          6.0      6.0      0.0  		moleculeCounts = self.molecules.total_counts()
    52                                           
    53                                           		# Get cell mass and volume
    54         1        325.0    325.0      2.0  		cellMass = (self.readFromListener("Mass", "cellMass") * units.fg).asNumber(units.g)
    55         1          3.0      3.0      0.0  		self.cellVolume = cellMass / self.cellDensity
    56                                           
    57                                           		# Solve ODEs to next time step using the BDF solver through solve_ivp.
    58                                           		# Note: the BDF solver has been empirically tested to be the fastest
    59                                           		# solver for this setting among the list of solvers that can be used
    60                                           		# by the scipy ODE suite.
    61         1          1.0      1.0      0.0  		self.molecules_required, self.all_molecule_changes = self.moleculesToNextTimeStep(
    62         1          1.0      1.0      0.0  			moleculeCounts, self.cellVolume, self.nAvogadro,
    63         1      15884.0  15884.0     97.9  			self.timeStepSec(), self.randomState, solver="BDF",
    64                                           			)
    65                                           
    66                                           		# Request counts of molecules needed
    67         1          8.0      8.0      0.0  		self.molecules.requestIs(self.molecules_required)

